; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:nodemcuv2]
platform = espressif8266
board = nodemcuv2
framework = arduino

; Serial Monitor options
monitor_speed = 115200

; Upload options
upload_speed = 921600 ; 常见的 ESP8266 较高上传速率

; Library dependencies
; PlatformIO 会自动尝试解析库的版本，但明确指定版本可以确保一致性
; 基于你的编译日志：
lib_deps =
  ; ESP8266WiFi, ESP8266WebServer, Ticker, LittleFS 通常是 esp8266 框架的一部分
  tzapu/WiFiManager @ 2.0.17
  knolleary/PubSubClient @ 2.8.0
  adafruit/Adafruit NeoPixel @ 1.12.5
  bblanchon/ArduinoJson @ ~7.4.1 ; 兼容 ArduinoJson 7.4.1 版本

; Build options
; 你可以在这里添加特定的编译标志
build_flags =
  -D BAUD_RATE=115200 ; 如果你的代码中 Serial.begin() 使用了这个宏
  ; -D ARDUINOJSON_USE_LONG_LONG=1 ; 如果 ArduinoJson 需要处理64位整数
  ; -D ARDUINOJSON_DECODE_UNICODE=1 ; 如果 JSON 中包含需要解码的 Unicode 字符

; Filesystem image options
; 通常，PlatformIO 会为 NodeMCUv2 自动处理 LittleFS 的配置
; 如果需要自定义文件系统大小或类型，可以在这里指定
board_build.filesystem = littlefs
; 例如，如果你的 Flash 是 4MB，并且想分配 1MB 给 LittleFS:
; board_build.ldscript = eagle.flash.4m1m.ld
; (注意: 修改 ldscript 需要了解分区表，通常默认即可)

; Debug options (可选)
; debug_tool = esp-prog ; 或其他调试器
; debug_port = COMx ; 你的调试器端口
; debug_init_break = tbreak setup